# Generated by Django 5.0 on 2023-12-10 07:12

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('first_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
            ],
            options={
                'db_table': 'Availability',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='Name')),
                ('country', models.TextField(blank=True, db_column='Country', null=True)),
            ],
            options={
                'db_table': 'Brands',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('price', models.FloatField(db_column='Price')),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('totalprice', models.FloatField(db_column='TotalPrice')),
            ],
            options={
                'db_table': 'Cart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='Name', null=True)),
            ],
            options={
                'db_table': 'Categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Deliverymethod',
            fields=[
                ('deliveryid', models.AutoField(db_column='DeliveryID', primary_key=True, serialize=False)),
                ('deliverytype', models.TextField(db_column='DeliveryType')),
            ],
            options={
                'db_table': 'DeliveryMethod',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('departmentid', models.AutoField(db_column='DepartmentID', primary_key=True, serialize=False)),
                ('departmentname', models.TextField(blank=True, db_column='DepartmentName', null=True)),
            ],
            options={
                'db_table': 'Departments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
                ('action_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employeepermissions',
            fields=[
                ('employeepermissionid', models.AutoField(db_column='EmployeePermissionID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'EmployeePermissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employeepositions',
            fields=[
                ('employeepositionid', models.AutoField(db_column='EmployeePositionID', primary_key=True, serialize=False)),
                ('status', models.TextField(blank=True, db_column='Status', null=True)),
                ('dateassigned', models.DateField(blank=True, db_column='DateAssigned', null=True)),
                ('dateremoved', models.DateField(blank=True, db_column='DateRemoved', null=True)),
                ('salary', models.IntegerField(blank=True, db_column='Salary', null=True)),
                ('rate', models.FloatField(blank=True, db_column='Rate', null=True)),
            ],
            options={
                'db_table': 'EmployeePositions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('EmployeeID', models.AutoField(primary_key=True, serialize=False)),
                ('FirstName', models.TextField()),
                ('LastName', models.TextField()),
                ('Email', models.EmailField(blank=True, max_length=319, null=True)),
                ('PhoneNumber', models.CharField(max_length=12)),
                ('HireDate', models.DateField(blank=True, null=True)),
                ('Salary', models.FloatField(blank=True, null=True)),
                ('Status', models.CharField(choices=[('Активен', 'Уволен')], default='Активен', max_length=10)),
                ('DismissalDate', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.TextField()),
                ('Email', models.EmailField(blank=True, max_length=319, null=True)),
                ('PhoneNumber', models.CharField(max_length=12, unique=True)),
                ('Address', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoices',
            fields=[
                ('invoiceid', models.AutoField(db_column='InvoiceID', primary_key=True, serialize=False)),
                ('amount', models.IntegerField(db_column='Amount')),
            ],
            options={
                'db_table': 'Invoices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orderdetails',
            fields=[
                ('orderdetailid', models.AutoField(db_column='OrderDetailID', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('price', models.FloatField(db_column='Price')),
            ],
            options={
                'db_table': 'OrderDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(db_column='OrderID', primary_key=True, serialize=False)),
                ('date', models.DateField(db_column='Date')),
                ('employeeid', models.IntegerField(blank=True, db_column='EmployeeID', null=True)),
            ],
            options={
                'db_table': 'Orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orderstatus',
            fields=[
                ('statusid', models.AutoField(db_column='StatusID', primary_key=True, serialize=False)),
                ('statusname', models.TextField(db_column='StatusName')),
            ],
            options={
                'db_table': 'OrderStatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paymentmethod',
            fields=[
                ('paymentmethodid', models.AutoField(db_column='PaymentMethodID', primary_key=True, serialize=False)),
                ('methodname', models.TextField(db_column='MethodName')),
            ],
            options={
                'db_table': 'PaymentMethod',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paymentstatus',
            fields=[
                ('paymentstatusid', models.AutoField(db_column='PaymentStatusID', primary_key=True, serialize=False)),
                ('statusname', models.TextField(db_column='StatusName')),
            ],
            options={
                'db_table': 'PaymentStatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Paymenttype',
            fields=[
                ('paymenttypeid', models.AutoField(db_column='PaymentTypeID', primary_key=True, serialize=False)),
                ('typename', models.TextField(db_column='TypeName')),
            ],
            options={
                'db_table': 'PaymentType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Positionpermissions',
            fields=[
                ('positionpermissionid', models.AutoField(db_column='PositionPermissionID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'PositionPermissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Positions',
            fields=[
                ('positionid', models.AutoField(db_column='PositionID', primary_key=True, serialize=False)),
                ('positionname', models.TextField(blank=True, db_column='PositionName', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'Positions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Productcharacteristicsnew',
            fields=[
                ('productcharacteristicid', models.AutoField(db_column='ProductCharacteristicID', primary_key=True, serialize=False)),
                ('characteristics', models.TextField(blank=True, db_column='Characteristics', null=True)),
            ],
            options={
                'db_table': 'ProductCharacteristicsNew',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sku', models.TextField(db_column='SKU', unique=True)),
                ('name', models.TextField(db_column='Name')),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('price', models.FloatField(blank=True, db_column='Price', null=True)),
            ],
            options={
                'db_table': 'Products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storeinvoices',
            fields=[
                ('invoiceid', models.AutoField(db_column='InvoiceID', primary_key=True, serialize=False)),
                ('sum', models.IntegerField(db_column='Sum')),
                ('invoicedate', models.DateField(db_column='InvoiceDate')),
            ],
            options={
                'db_table': 'StoreInvoices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storeorderdetails',
            fields=[
                ('storeorderdetailid', models.AutoField(db_column='StoreOrderDetailID', primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'StoreOrderDetails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storeorders',
            fields=[
                ('storeorderid', models.AutoField(db_column='StoreOrderID', primary_key=True, serialize=False)),
                ('orderdate', models.DateField(db_column='OrderDate')),
                ('status', models.TextField(db_column='Status')),
            ],
            options={
                'db_table': 'StoreOrders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stores',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('city', models.TextField(blank=True, db_column='City', null=True)),
                ('street', models.TextField(blank=True, db_column='Street', null=True)),
                ('building', models.TextField(blank=True, db_column='Building', null=True)),
                ('area', models.TextField(blank=True, db_column='Area', null=True)),
            ],
            options={
                'db_table': 'Stores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('PermissionID', models.AutoField(primary_key=True, serialize=False)),
                ('PermissionName', models.TextField()),
                ('Description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employeesdepartments',
            fields=[
                ('employeeid', models.OneToOneField(blank=True, db_column='EmployeeID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='shop.employees')),
            ],
            options={
                'db_table': 'EmployeesDepartments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Favouriteproducts',
            fields=[
                ('userid', models.OneToOneField(blank=True, db_column='UserID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='shop.customers')),
            ],
            options={
                'db_table': 'FavouriteProducts',
                'managed': False,
            },
        ),
    ]
